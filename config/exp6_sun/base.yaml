Description:
  model_name: decoder_exp6_sun
general:
  run_name: 'default_run'
  out_dir: './out'
  save_path: "${general.out_dir}/${general.run_name}/"
  base_path: "config/exp6_sun/base.yaml"
  wandb_dir: "/scratch-local/mappel/wandb"
  device: 'cuda:0'
  gpu: 0
  project_name: decoder_exp6_sun
  entity: michelleappel
  model_log_freq: 16
  save_every: 1
  params: './config/params.yaml'
  n_phosphenes: 1024
  seed: 0

simulator:
  use_normalization: True
  base_size: 3
  scale: 0.0001
  A_min: 0.0
  A_max: 0.00016
  learning_rate: 0.002
  steps: 2000
  target: null

# ─── DATASET SELECTION ──────────────────────────────────────
dataset:

  # ─── SELECT ONE ───────────────────────────────────────────
  # dataset: LaPa
  dataset: sun

  # ─── BASE OPTIONS ───────────────────────────────────────────
  imsize: [256, 256]
  overwrite_simulator_res: True # If True, the simulator resolution will be set to the image size
  grayscale: True # If True, the images will be converted to grayscale

  # Choose one of the following processing methods:
  # processing: 'grayscale'
  # processing: 'canny'
  # processing: 'DoG'
  # processing: 'random'
  processing: 'Dog'
  DoG: # LOG options
    method: 'cortical'
    kde_k: 16
    kde_alpha: 1.0
    beta: 0.55

  # ─── LaPa OPTIONS ────────────────────────────────────────
  lapa:
    # target: ['semantic']
    target: ['boundary']
    data_directory: /projects/prjs0344/Dynaphos/data/face/LaPa

  # ─── Cityscapes OPTIONS ───────────────────────────────────
  sun:
    data_directory: /projects/prjs0344/Dynaphos/data/SUN/SUN397

model:
  in_channels: 1
  out_channels: 1
  output_activation: 'sigmoid'

train:
  epochs: 10
  batch_size: 8
  lr: 5e-4
  weight_decay: 1e-5
  num_workers: 0

loss:
  # ─── SELECT ONE ────────────────────────────────────────────
  # loss_function: InformationWeightedSSIMLoss
  # loss_function: MSE
  # loss_function: SSIM
  # loss_function: LPIPS
  # loss_function: VGGPerceptualLoss
  # loss_function: FSIM
  # loss_function: DISTS
  # loss_function: PieAPP
  # loss_function: PseudoHuberLoss
  loss_function: HybridLoss

  # ─── FOR HYBRID ONLY ──────────────────────────────────────
  losses:
    - SSIM
    - VGGPerceptualLoss
  weights:
    - 0.3
    - 0.7

  # ─── GLOBAL ARGS ──────────────────────────────────────────
  reduction: mean
  data_range: 1.0

  # ─── SSIM ────────────────────────────────────────────────
  ssim:
    kernel_size: 11
    kernel_sigma: 1.5
    k1: 0.01
    k2: 0.03
    downsample: false
    reduction: mean
    data_range: 1.0

  # ─── LPIPS ───────────────────────────────────────────────
  lpips:
    replace_pooling: false
    distance: mse
    reduction: mean
    mean: [0.485, 0.456, 0.406]
    std:  [0.229, 0.224, 0.225]

  # ─── VGG Perceptual ──────────────────────────────────────
  vgg:
    feature_extractor: vgg16
    layers: ['relu3_3', 'relu4_3', 'relu5_3']
    weights: [0.8, 0.1, 0.1]
    replace_pooling: false
    distance: mse
    reduction: mean
    mean: [0.485, 0.456, 0.406]
    std:  [0.229, 0.224, 0.225]
    normalize_features: true
    allow_layers_weights_mismatch: false

  # ─── FSIM ────────────────────────────────────────────────
  fsim:
    reduction: mean
    data_range: 1.0
    chromatic: false
    scales: 4
    orientations: 4
    min_length: 7
    mult: 2
    sigma_f: 0.55
    delta_theta: 1.2
    k: 2.0

  # ─── DISTS ───────────────────────────────────────────────
  dists:
    reduction: mean
    mean: [0.485, 0.456, 0.406]
    std:  [0.229, 0.224, 0.225]

  # ─── PieAPP ─────────────────────────────────────────────
  pieapp:
    reduction: mean
    data_range: 1.0
    stride: 27
    enable_grad: true

  # ─── PseudoHuberLoss ────────────────────────────────────
  pseudo_huber:
    delta: 1.0
    reduction: mean

evaluate:
  split: test
  model_ckpt: out/LoG_sun/decoder_epoch02.pt       # path to the .pt you want
  metrics:
    - mse
    - ssim
    - vgg_perceptual
    - lpips
    - fsim
    - dists
    - pieapp
    - mdsi
    - vsi
    - srsim
  batch_size: 8
  num_workers: 0
  num_images_eval: 5000 # number of images to evaluate
  num_images_plot: 50 # number of images to plot
  timing:
    measure_inference: true
  output:
    out_dir: results/
    results_dir: "${evaluate.output.out_dir}/${general.run_name}/"                              # where CSV + plots live
    per_image_csv: per_image_metrics.csv                    # raw scores
    summary_csv: summary_metrics.csv                        # mean ± std